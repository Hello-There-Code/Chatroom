import os
import sys
import threading
import select
import socket
import getpass
from cryptography.fernet import Fernet

#Acquire the key from the file generated by keygen.py
file = open('keyFile.key', 'rb')
key = file.read()
file.close()
#print(key)

#Check if all arguments are inputted
if len(sys.argv) != 3:
    print("Please input parameters: python script, IP, Port")
    exit()

#Extract IP and port from arguments
ip = str(sys.argv[1])
port = int(sys.argv[2])

#Username for chatroom
username = raw_input("Enter username: ")

#Establish connection with host using arguments
host = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print("Connecting to host...")
host.connect((ip, port))
print("Successfully connected to host: " + ip)

#Send username to host
host.send(username.encode())
hostName = host.recv(1024)
hostName = hostName.decode()

print(hostName + " has entered the chat")

while True:
    f = Fernet(key)
    recvEncryptMsg = host.recv(1024)
    decryptedMsg = f.decrypt(recvEncryptMsg)
    recvMsg = decryptedMsg.decode()
    print(hostName + ": " + recvMsg)
    if recvMsg.lower() == "quit":
        host.close()
        print("Chat has ended")
        exit()

    sendMsg = raw_input("Me (Enter 'quit' to close chat): ")
    if sendMsg.lower() == "quit":     
        encodeMsg = sendMsg.encode()
        encryptedMsg = f.encrypt(encodeMsg)    
        host.send(encryptedMsg)
        host.close()
        print("Chat has ended")
        exit()
    else:
        encodeMsg = sendMsg.encode()
        encryptedMsg = f.encrypt(encodeMsg)    
        host.send(encryptedMsg)
